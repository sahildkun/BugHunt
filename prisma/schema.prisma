// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // used for migrations
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  ADMIN
  USER
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                   String            @id @default(cuid())
  name                 String?
  email                String?           @unique
  emailVerified        DateTime?
  image                String?
  roles           UserRoleOrganization[]
  accounts             Account[]
  sessions             Session[]
  organisationsCreated Organization[]    @relation("createdBy")
  bugsCreated          Bug[]             @relation("createdByUser")
 
}

model Bug {
  id             String       @id @default(cuid())
  title          String
  description    String?
  status         BugStatus
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  createdById    String
  createdBy      User       @relation("createdByUser", fields: [createdById], references: [id])
  Organization   Organization @relation("belongsto", fields: [organizationId], references: [id])
  organizationId String
}

model UserRoleOrganization {
  id             String  @id @default(cuid())
  userId         String
  organizationId String
  role           UserRole
  user           User    @relation(fields: [userId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])
}

model Organization {
  id          String   @id @default(cuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   User   @relation("createdBy", fields: [createdById], references: [id])
  createdById String
  members UserRoleOrganization[]
  bugs        Bug[]    @relation("belongsto")
}

enum BugStatus {
  raised
  Threat
  resolved
  Deadline
}
